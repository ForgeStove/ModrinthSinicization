name: Release

on:
  push:
    branches:
      - main

jobs:
  generate-changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    outputs:
      release_body: ${{ steps.git-cliff.outputs.content }}
      new_version: ${{ steps.get_new_version.outputs.new_version }}
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag and increment version
        id: get_new_version
        run: |
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) || echo "v0.0.0")
          MAJOR=$(echo $LATEST_TAG | cut -d'.' -f2 | tr -cd '[:digit:]')
          MINOR=$(echo $LATEST_TAG | cut -d'.' -f3 | tr -cd '[:digit:]')
          PATCH=$(echo $LATEST_TAG | cut -d'.' -f4 | tr -cd '[:digit:]')
          if [ -z "$PATCH" ]; then PATCH=0; fi
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="v0.$MINOR.$NEW_PATCH"
          echo "::set-output name=new_version::$NEW_VERSION"

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md

  create-release:
    needs: generate-changelog
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Upload script.user.js as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: script.user.js
          path: script.user.js

      - name: Download script.user.js artifact
        uses: actions/download-artifact@v4
        with:
          name: script.user.js
          path: .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.YLOVEXLN_WORKFLOWS }}
        with:
          tag_name: ${{ needs.generate-changelog.outputs.new_version }}
          release_name: Release ${{ needs.generate-changelog.outputs.new_version }}
          body: ${{ needs.generate-changelog.outputs.release_body }}
          draft: false
          prerelease: false

      - name: Upload script.user.js to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.YLOVEXLN_WORKFLOWS }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./script.user.js
          asset_name: script.user.js
          asset_content_type: application/javascript



